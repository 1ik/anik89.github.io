<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Anik's Blog]]></title>
  <link href="http://anik89.github.io/atom.xml" rel="self"/>
  <link href="http://anik89.github.io/"/>
  <updated>2015-01-28T12:11:27+06:00</updated>
  <id>http://anik89.github.io/</id>
  <author>
    <name><![CDATA[Anik Hasan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Creating a Notification System for With Laravel's Polymorphic Relationship in a Laravel Powered Site]]></title>
    <link href="http://anik89.github.io/blog/2015/01/28/creating-a-notification-system-for-with-laravels-polymorphic-relationship-in-a-laravel-powered-site/"/>
    <updated>2015-01-28T12:09:49+06:00</updated>
    <id>http://anik89.github.io/blog/2015/01/28/creating-a-notification-system-for-with-laravels-polymorphic-relationship-in-a-laravel-powered-site</id>
    <content type="html"><![CDATA[<p>coming soon..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NetworkListView - Loads Data From URL, Infinite Scrolling and Pluggable Onclick Listener in One Class]]></title>
    <link href="http://anik89.github.io/blog/2015/01/28/networklistview-custom-listview-that-loads-data-from-a-given-url/"/>
    <updated>2015-01-28T02:12:40+06:00</updated>
    <id>http://anik89.github.io/blog/2015/01/28/networklistview-custom-listview-that-loads-data-from-a-given-url</id>
    <content type="html"><![CDATA[<p>
    The inspiration is to show a ListView that downloads data from url, parses and shows with infinite scrolling but that should be initialized just from a layout.
</p>




<!-- more -->


<figure class='code'><figcaption><span>Time to be Awesome - awesome.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">&lt;</span><span class="n">com</span><span class="o">.</span><span class="n">example</span><span class="o">.</span><span class="n">NetworkListView</span>
</span><span class='line'>  <span class="ss">android</span><span class="p">:</span><span class="nb">id</span><span class="o">=</span><span class="s2">&quot;@+id/networkList&quot;</span>
</span><span class='line'>  <span class="ss">android</span><span class="p">:</span><span class="n">textColor</span><span class="o">=</span><span class="s2">&quot;#ffffff&quot;</span>
</span><span class='line'>  <span class="ss">custom</span><span class="p">:</span><span class="n">url</span><span class="o">=</span><span class="s2">&quot;http://example.com/someapi/data&quot;</span>
</span><span class='line'>  <span class="ss">custom</span><span class="p">:</span><span class="n">upfront_load</span><span class="o">=</span><span class="s2">&quot;15&quot;</span>
</span><span class='line'>  <span class="ss">custom</span><span class="p">:</span><span class="n">load_item_count</span><span class="o">=</span><span class="s2">&quot;20&quot;</span>
</span><span class='line'>  <span class="ss">custom</span><span class="p">:</span><span class="n">clickListener</span><span class="o">=</span><span class="s2">&quot;com.example.MyItemClickListener&quot;</span>
</span><span class='line'>  <span class="ss">android</span><span class="p">:</span><span class="n">layout_width</span><span class="o">=</span><span class="s2">&quot;match_parent&quot;</span>
</span><span class='line'>  <span class="ss">android</span><span class="p">:</span><span class="n">layout_height</span><span class="o">=</span><span class="s2">&quot;wrap_content&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/com.radiogbd.app.views.NetworkListView&gt;</span>
</span></code></pre></td></tr></table></div></figure>




<h3>Creating the basic structure.</h3>




<p>
    Define a new class, I have given it a name which is <code>NetworkListView</code>.
</p>


<p>
    So the basic structure of this class looks like below. It requires the implementation to override all the 3 constructors <code>NetworkListView(Context context)</code>,<code>NetworkListView(Context context, AttributeSet attrs)</code> and <code>NetworkListView(Context context, AttributeSet attrs, int defStyle)</code>. Otherwise it might give you runtime exception while constrcuting object from various contexts, for instance from xml file. The <code>AttributeSet</code> is an interesting parameter. We can get the values passed from xml file where this NetworkListView is definied and do our stuffs in this class with those values, which makes this class a bit more flexible.
</p>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NetworkListView</span> <span class="kd">extends</span> <span class="n">ListView</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">Context</span> <span class="n">mContext</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">NetworkListView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">NetworkListView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">NetworkListView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">defStyle</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">,</span> <span class="n">defStyle</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<h3>The <code>init()</code> function.</h3>


<p>
    I extracted out the initialization functionalities into <code>init(AttributeSet attrs)</code> function so that it can be called from all of these constructors.
</p>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NetworkListView</span> <span class="kd">extends</span> <span class="n">ListView</span> <span class="o">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">Context</span> <span class="n">mContext</span><span class="o">;</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">url</span><span class="o">;</span> <span class="c1">//url to send request</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">upfront_load</span><span class="o">;</span> <span class="c1">//how many list items to come to the screen when we send request to load more data.</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">load_item_count</span><span class="o">;</span> <span class="c1">//how many items to load.</span>
</span><span class='line'>  
</span><span class='line'>  <span class="kd">public</span> <span class="nf">NetworkListView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">NetworkListView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">NetworkListView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">defStyle</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">,</span> <span class="n">defStyle</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">init</span><span class="o">(</span><span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">if</span><span class="o">(</span><span class="n">attrs</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">return</span><span class="o">;</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">TypedArray</span> <span class="n">arr</span> <span class="o">=</span> <span class="n">mContext</span><span class="o">.</span><span class="na">getTheme</span><span class="o">().</span><span class="na">obtainStyledAttributes</span><span class="o">(</span><span class="n">attrs</span><span class="o">,</span> <span class="n">R</span><span class="o">.</span><span class="na">styleable</span><span class="o">.</span><span class="na">NetworkListView</span><span class="o">,</span><span class="mi">0</span><span class="o">,</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">url</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">styleable</span><span class="o">.</span><span class="na">NetworkListView_url</span><span class="o">);</span> <span class="c1">//parsing and taking the url to send request.</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//parse other options and update their class variables.</span>
</span><span class='line'>        <span class="n">upfront_load</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">styleable</span><span class="o">.</span><span class="na">NetworkListView_upfront_load</span><span class="o">,-</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>        <span class="n">load_item_count</span> <span class="o">=</span> <span class="n">arr</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">styleable</span><span class="o">.</span><span class="na">NetworkListView_load_item_count</span><span class="o">,-</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>We still need an <code>ArrayAdapter</code> for our <code>ListView</code>, an <code>OnScrollListener</code> to know when should we need to load more data and update the <code>ListView</code> and set an <code>OnItemClickListener</code> to the <code>ListView</code> so that we can listen to the click event on the ListItem.</p>




<h4><code>NetworkListAdapter</code> The <code>Adapter</code> for this <code>ListView</code></h4>




<figure class='code'><figcaption><span>NetworkListAdapter.java </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">NetworkListAdapter</span> <span class="kd">extends</span> <span class="n">ArrayAdapter</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">ListItem</span><span class="o">&gt;</span> <span class="n">artists</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">private</span> <span class="n">Context</span> <span class="n">mContext</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">NetworkListAdapter</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">ListItem</span><span class="o">&gt;</span> <span class="n">artists</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">artists</span> <span class="o">=</span> <span class="n">artists</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">mContext</span> <span class="o">=</span> <span class="n">context</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getCount</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">artists</span><span class="o">.</span><span class="na">size</span><span class="o">();</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@Override</span>
</span><span class='line'>    <span class="kd">public</span> <span class="n">View</span> <span class="nf">getView</span><span class="o">(</span><span class="kt">int</span> <span class="n">position</span><span class="o">,</span> <span class="n">View</span> <span class="n">convertView</span><span class="o">,</span> <span class="n">ViewGroup</span> <span class="n">parent</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">LayoutInflater</span> <span class="n">inflater</span> <span class="o">=</span> <span class="o">(</span><span class="n">LayoutInflater</span><span class="o">)</span> <span class="n">mContext</span><span class="o">.</span><span class="na">getSystemService</span><span class="o">(</span><span class="n">Context</span><span class="o">.</span><span class="na">LAYOUT_INFLATER_SERVICE</span><span class="o">);</span>
</span><span class='line'>        <span class="n">View</span> <span class="n">v</span> <span class="o">=</span> <span class="n">inflater</span><span class="o">.</span><span class="na">inflate</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">simpleview</span><span class="o">,</span><span class="kc">null</span><span class="o">);</span>
</span><span class='line'>        <span class="n">TextView</span> <span class="n">tv</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span> <span class="n">v</span><span class="o">.</span><span class="na">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tview</span><span class="o">);</span>
</span><span class='line'>        <span class="n">tv</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">artists</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">position</span><span class="o">).</span><span class="na">artist</span><span class="o">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">v</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>ListItem.java </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kd">class</span> <span class="nc">ListItem</span> <span class="o">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="n">artist</span><span class="o">;</span>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="nf">ListItem</span><span class="o">(</span><span class="n">String</span> <span class="n">artist</span><span class="o">,</span> <span class="kt">int</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">artist</span> <span class="o">=</span> <span class="n">artist</span><span class="o">;</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getArtist</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">artist</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setArtist</span><span class="o">(</span><span class="n">String</span> <span class="n">artist</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">artist</span> <span class="o">=</span> <span class="n">artist</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getId</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setId</span><span class="o">(</span><span class="kt">int</span> <span class="n">id</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>        <span class="k">this</span><span class="o">.</span><span class="na">id</span> <span class="o">=</span> <span class="n">id</span><span class="o">;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>




<p>To be continued&#8230; </p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Just Starting Off]]></title>
    <link href="http://anik89.github.io/blog/2015/01/23/just-starting-off/"/>
    <updated>2015-01-23T04:12:41+06:00</updated>
    <id>http://anik89.github.io/blog/2015/01/23/just-starting-off</id>
    <content type="html"><![CDATA[<p>Beginning my blogging Journey.</p>


<!-- more -->


<p>So it&#8217;s been a long while that I have wanted to open my blog and write my thoughts about my works and life and now it starts here. It&#8217;s late because I think I am lazy or life didn&#8217;t give me enough opportunity to figure out a scope to give it a try.</p>




<p>But, it&#8217;s better late than never ;). So, hoping to get a habit of blogging and I hope I&#8217;ll like it.</p>




<p>Oh! I found this awesome blogging framework <a href="http://octopress.org/">Octopress</a>. I guess it&#8217;s one of the main reasons for me to get interested in blogging.</p>

]]></content>
  </entry>
  
</feed>
